datos_elecciones_tidy <- datos_elecciones_tidy |>
mutate(tipo_area = if_else(censo < 1000, "Rural", "Urbana"))
datos_elecciones_tidy |>
slice_max(porc_voto, by = c(fecha, id_mun)) |>
ggplot() +
geom_bar(aes(x = tipo_area, fill = ganador), position = "dodge", alpha = 0.8) +
scale_fill_manual(values = colores_partidos) +
guides(fill = "none") +
labs(title = "Número de veces que los partidos \nganan en municipios rurales y urbanos",
x = "Tipo de área",
y = "Número de veces que gana",
fill = "Ganador") +
theme_minimal() +
theme(plot.title = element_text(face = "bold", hjust = 0.5))
#| code-fold: true
#| fig.align: 'center'
datos_elecciones_tidy <- datos_elecciones_tidy |>
mutate(tipo_area = if_else(censo < 1000, "Rural", "Urbana"))
datos_elecciones_tidy |>
slice_max(porc_voto, by = c(fecha, id_mun)) |>
ggplot() +
geom_bar(aes(x = tipo_area, fill = ganador), position = "dodge", alpha = 0.8) +
scale_fill_manual(values = colores_partidos) +
labs(title = "Número de veces que los partidos \nganan en municipios rurales y urbanos",
x = "Tipo de área",
y = "Número de veces que gana",
fill = "Ganador") +
theme_minimal() +
theme(plot.title = element_text(face = "bold", hjust = 0.5))
#| code-fold: true
#| fig.align: 'center'
datos_elecciones_tidy <- datos_elecciones_tidy |>
mutate(tipo_area = if_else(censo < 1000, "Rural", "Urbana"))
datos_elecciones_tidy |>
slice_max(porc_voto, by = c(fecha, id_mun)) |>
ggplot() +
geom_bar(aes(x = tipo_area, fill = ganador), position = "dodge", alpha = 0.8) +
scale_fill_manual(values = colores_partidos) +
labs(title = "Número de veces que los partidos \nganan en municipios rurales y urbanos",
x = "Tipo de área",
y = "Número de veces que gana",
fill = "Ganador") +
theme_minimal() +
theme(plot.title = element_text(face = "bold", hjust = 0.5),
legend.position = "bottom")
#| code-fold: true
#| fig.align: 'center'
datos_elecciones_tidy <- datos_elecciones_tidy |>
mutate(tipo_area = if_else(censo < 1000, "Rural", "Urbana"))
datos_elecciones_tidy |>
slice_max(porc_voto, by = c(fecha, id_mun)) |>
ggplot() +
geom_bar(aes(x = tipo_area, fill = ganador), position = "dodge", alpha = 0.8) +
scale_fill_manual(values = colores_partidos) +
labs(title = "Número de veces que los partidos \nganan en municipios rurales y urbanos",
x = "Tipo de área",
y = "Victorias",
fill = "Ganador") +
theme_minimal() +
theme(plot.title = element_text(face = "bold", hjust = 0.5),
legend.position = "bottom")
#| echo: false
rm(list = ls()) # Borramos variables de environment
library(tidyverse)
library(glue)
library(sf)
library(patchwork)
#| warning: false
#| message: false
datos_elecciones_brutos <- read_csv(file = "./datos/datos_elecciones_brutos.csv")
cod_mun <- read_csv(file = "./datos/cod_mun.csv")
encuestas_brutos <- read_csv(file = "./datos/historical_surveys.csv")
siglas <- read_csv(file = "./datos/siglas.csv")
datos_elecciones <- datos_elecciones_brutos |>
select(where(~ n_distinct(.) > 1))
encuestas <- encuestas_brutos |>
select(where(~ n_distinct(.) > 1))
datos_elecciones_tidy <- datos_elecciones |>
pivot_longer(cols = - ("anno":"votos_candidaturas"),
names_to = "partido",
values_to = "votos",
values_drop_na = TRUE)
encuestas_tidy <- encuestas |>
pivot_longer(cols = -("date_elec":"turnout"),
names_to = "siglas",
values_to = "intencion_voto",
values_drop_na = TRUE)
siglas <- siglas |>
group_by(denominacion) |>
summarise(siglas = first(siglas))
#| warning: false
datos_elecciones_tidy <- datos_elecciones_tidy |>
left_join(siglas, by = c("partido" = "denominacion")) |>
relocate(siglas, .after = partido)
encuestas_tidy <- encuestas_tidy |>
left_join(siglas, by = c("siglas" = "siglas")) |>
relocate(siglas, .after = siglas)
agrupar_siglas <- function(siglas, partido){
siglas_comun <- case_when(
# BLOQUE NACIONALISTA GALEGO (BNG)
str_detect(str_to_upper(siglas), "BNG|B.N.G.")
~ "BNG",
# CONVERGÈNCIA I UNIÓ (CIU)
str_detect(str_to_upper(siglas), "CIU") |
str_detect(str_to_upper(partido), "CONVERGÈNCIA I UNIÓ")
~ "CIU",
# COMPROMÍS
(str_detect(str_to_upper(siglas), "COMPROMÍS|COMPROMIS|VERDS") |
str_detect(str_to_upper(partido), "COMPROMÍS")) &
!str_detect(str_to_upper(partido), "MÉS COMPROMÍS")
~ "COMPROMIS",
# CIUDADANOS (Cs) (cuidado: tiene/tuvo federaciones - sucursales - con algún otro nombre)
str_detect(str_to_upper(siglas), "CS") |
str_detect(str_to_upper(partido), "CIUDADANOS PARTIDO DE LA|CIUDADANOS,|CIUDADANOS-|CIUTADANS")
~ "CS",
# EH - BILDU (son ahora una coalición de partidos formados por Sortu, Eusko Alkartasuna, Aralar, Alternatiba)
str_detect(str_to_upper(siglas), "EH|AMAIUR|ARALAR") |
str_detect(str_to_upper(partido), "EUSKO ALKARTASUNA|EUSKAL HERRIA BILDU|PARTIDO POLITICO ARALAR")
~ "EH-BILDU",
# ESQUERRA REPUBLICANA DE CATALUNYA (ERC)
(str_detect(str_to_upper(siglas), "ERC|ESQUERRA") |
str_detect(str_to_upper(partido), "ESQUERRA REPUBLICANA")) &
!str_detect(str_to_upper(partido), "PAIS VALENCIA|PAÍS VALENCIÀ")
~ "ERC",
# MÁS PAÍS
str_detect(str_to_upper(siglas), "MÁS PAÍS|MP|M PAÍS") &
!str_detect(str_to_upper(partido), "MÉS COMPROMÍS")
~ "MÁS PAÍS",
# PARTIDO NACIONALISTA VASCO (PNV)
str_detect(str_to_upper(siglas), "PNV|P.N.V.")
~ "PNV",
# PARTIDO POPULAR (PP)
((str_detect(str_to_upper(siglas), "PP|AP|PDP") |
str_detect(str_to_upper(partido), "PARTIDO POPULAR|UNIÓN DEL PUEBLO NAVARRO EN COALICIÓN CON EL PARTI")) &
!str_detect(str_to_upper(partido), "ARA,|ANTICAPITALIST|PARTIDO POSITIVISTA CRISTIANO|PLATAFORMA DEL PUEBLO SORIANO"))
~ "PP",
# PARTIDO SOCIALISTA OBRERO ESPAÑOL (cuidado: tiene/tuvo federaciones - sucursales - con algún otro nombre)
str_detect(str_to_upper(siglas), "PSOE|PAD|PSC") |
str_detect(str_to_upper(partido), "PARTIDO SOCIALI|PSOE|PARTIT SOCIALISTA OBRER ESPANYOL")
~ "PSOE",
# UNIDAS PODEMOS - IU (cuidado que aquí han tenido nombres variados -
# IU, los verdes, podem, ezker batua, …- y no siempre han ido juntos,
# pero aquí los analizaremos juntos (UP-IU)
((str_detect(str_to_upper(siglas), "IU|LV|PODEMOS|UP|VERDES|CANARIAS DE") |
str_detect(str_to_upper(partido), "ELS VERDS|PODEM|EN MAREA|EQUO|PODEMOS|ESQUERDA UNIDA|ESQUERRA UNIDA|EZKER BATUA|OS VERDES|IZQUIERDA UNIDA")) &
(!str_detect(str_to_upper(siglas), "CUP|EN POSITIU|EL PI|UPYD|RECORTES CERO-GRUPO VERDE|UPD|UPL") |
!str_detect(str_to_upper(partido), "EN POSITIU|EL PI|MOVIMIENTO POR LA UNIDAD DEL PUEBLO CANARIO|RECORTES CERO|RECORTES CERO-GRUPO VERDE|UNION DEL PUEBLO LEONES|N PROGRESO Y DEMOCRACIA")))
~ "UP-IU",
# VOX
str_detect(str_to_upper(siglas), "VOX") ~ "VOX",
# OTROS
TRUE ~ "OTROS")
return(siglas_comun)
}
datos_elecciones_tidy <- datos_elecciones_tidy |>
mutate(siglas_comun = agrupar_siglas(siglas, partido))
encuestas_tidy <- encuestas_tidy |>
mutate(siglas_comun = agrupar_siglas(siglas, denominacion))
datos_elecciones_tidy <- datos_elecciones_tidy |>
mutate(fecha = glue::glue("{anno}-{mes}"),
id_mun = glue::glue("{codigo_ccaa}-{codigo_provincia}-{codigo_municipio}")) |>
left_join(cod_mun, by = c("id_mun" = "cod_mun"))
encuestas_tidy <- encuestas_tidy |>
drop_na(size) |>
mutate(dias_trabajo = field_date_to - field_date_from, .after = field_date_to) |>
filter(lubridate::year(date_elec) >= 2008 & !exit_poll & size > 750 & dias_trabajo > 1) |>
select(-exit_poll)
datos_elecciones_tidy <- datos_elecciones_tidy |>
mutate(votos = sum(votos), .by = c(fecha, id_mun, siglas_comun)) |>
distinct(fecha, id_mun, siglas_comun, .keep_all = TRUE) |>
mutate(porc_voto = (votos / (votos_candidaturas + votos_blancos)) * 100,
.by = c(fecha, id_mun))
#| code-fold: true
#| #| fig.align: 'center'
partidos_nacionales <- c("PSOE", "PP", "VOX", "CS", "MP", "UP-IU")
datos_elecciones_tidy |>
mutate(group = ifelse(siglas_comun %in% partidos_nacionales, "Nacionales", "Autonómicos/Nacionalistas")) |>
mutate(group = forcats::fct_relevel(group, "Nacionales", "Autonómicos/Nacionalistas")) |>
summarise(porc_total = sum(porc_voto), .by = c(group, fecha, id_mun)) |>
ggplot() +
ggridges::geom_density_ridges(aes(x = porc_total, y = group,
fill = group, color = group),
alpha = 0.7) +
scale_fill_manual(values = c("Nacionales" = "#1f77b4", "Autonómicos/Nacionalistas" = "#d62728")) +
scale_color_manual(values = c("Nacionales" = "#1f77b4", "Autonómicos/Nacionalistas" = "#d62728")) +
labs(title = "Distribución del Porcentaje Total de Votos por Municipio",
y = "",
fill = "Tipo de partido",
color = "Tipo de partido") +
theme_minimal() +
theme(plot.title = element_text(face = "bold", hjust = 0.5),
axis.text.y = element_blank(),
legend.position = "bottom") +
facet_wrap(~fecha)
#| code-fold: true
partido_ganador <- datos_elecciones_tidy |>
filter(censo > 100000) |>
slice_max(porc_voto, by = c(fecha, id_mun)) |>
select(fecha, id_mun, siglas_comun, porc_voto) |>
arrange(fecha, id_mun)
partido_ganador_2008_03 <- partido_ganador |>
filter(fecha == "2008-03")
partido_ganador_2011_11 <- partido_ganador |>
filter(fecha == "2011-11")
partido_ganador_2015_12 <- partido_ganador |>
filter(fecha == "2015-12")
partido_ganador_2016_06 <- partido_ganador |>
filter(fecha == "2016-06")
partido_ganador_2019_04 <- partido_ganador |>
filter(fecha == "2019-04")
partido_ganador <- partido_ganador |>
filter(fecha == "2019-11")
#| message: false
#| warning: false
#| code-fold: true
tpm <- capture.output(municipios <- st_read("./datos/lineas_limite/SHP_ETRS89/recintos_municipales_inspire_peninbal_etrs89/recintos_municipales_inspire_peninbal_etrs89.shp"))
rm(tmp)
municipios <- municipios |>
mutate(id_mun = str_replace_all(NATCODE, "(..)(..)(..)(..)(...)", "\\2-\\4-\\5"))
municipios_2008_03 <- municipios |>
left_join(partido_ganador_2008_03, by = c("id_mun" = "id_mun"))
municipios_2011_11 <- municipios |>
left_join(partido_ganador_2011_11, by = c("id_mun" = "id_mun"))
municipios_2015_12 <- municipios |>
left_join(partido_ganador_2015_12, by = c("id_mun" = "id_mun"))
municipios_2016_06 <- municipios |>
left_join(partido_ganador_2016_06, by = c("id_mun" = "id_mun"))
municipios_2019_04 <- municipios |>
left_join(partido_ganador_2019_04, by = c("id_mun" = "id_mun"))
municipios_2019_11 <- municipios |>
left_join(partido_ganador, by = c("id_mun" = "id_mun"))
#| code-fold: true
partidos_leyenda <- data.frame(
siglas_comun = factor(c("PP", "PSOE", "CIU", "UP-IU", "ERC"),
levels = c("PP", "PSOE", "CIU", "UP-IU", "ERC"))
)
mapa_2008_03 <- ggplot(municipios_2008_03 |>
mutate(siglas_comun = factor(siglas_comun, levels = c("PP", "PSOE", "CIU", "UP-IU", "ERC")))) +
geom_sf(aes(fill = siglas_comun), color = "grey20") +
geom_blank(data = partidos_leyenda, aes(fill = siglas_comun)) +
scale_fill_manual(values = c("PP" = "#1f77b4", "PSOE" = "#d62728",
"CIU" = "#1c3687", "UP-IU" = "#7D3C98", "ERC" = "#FFD700")) +
theme_minimal() +
labs(title = "2018-03",
fill = "Partido ganador") +
theme(
plot.title = element_text(hjust = 0.5),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks =  element_blank(),
axis.title = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
mapa_2011_11 <- ggplot(municipios_2011_11 |>
mutate(siglas_comun = factor(siglas_comun, levels = c("PP", "PSOE", "CIU", "UP-IU", "ERC")))) +
geom_sf(aes(fill = siglas_comun), color = "grey20") +
geom_blank(data = partidos_leyenda, aes(fill = siglas_comun)) +
scale_fill_manual(values = c("PP" = "#1f77b4", "PSOE" = "#d62728",
"CIU" = "#1c3687", "UP-IU" = "#7D3C98", "ERC" = "#FFD700")) +
theme_minimal() +
labs(title = "2011-11",
fill = "Partido ganador") +
theme(
plot.title = element_text(hjust = 0.5),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks =  element_blank(),
axis.title = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
mapa_2015_12 <- ggplot(municipios_2015_12 |>
mutate(siglas_comun = factor(siglas_comun, levels = c("PP", "PSOE", "CIU", "UP-IU", "ERC")))) +
geom_sf(aes(fill = siglas_comun), color = "grey20") +
geom_blank(data = partidos_leyenda, aes(fill = siglas_comun)) +
scale_fill_manual(values = c("PP" = "#1f77b4", "PSOE" = "#d62728",
"CIU" = "#1c3687", "UP-IU" = "#7D3C98", "ERC" = "#FFD700")) +
theme_minimal() +
labs(title = "2015-12",
fill = "Partido ganador") +
theme(
plot.title = element_text(hjust = 0.5),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks =  element_blank(),
axis.title = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
mapa_2016_06 <- ggplot(municipios_2016_06 |>
mutate(siglas_comun = factor(siglas_comun, levels = c("PP", "PSOE", "CIU", "UP-IU", "ERC")))) +
geom_sf(aes(fill = siglas_comun), color = "grey20") +
geom_blank(data = partidos_leyenda, aes(fill = siglas_comun)) +
scale_fill_manual(values = c("PP" = "#1f77b4", "PSOE" = "#d62728",
"CIU" = "#1c3687", "UP-IU" = "#7D3C98", "ERC" = "#FFD700")) +
theme_minimal() +
labs(title = "2016-06",
fill = "Partido ganador") +
theme(
plot.title = element_text(hjust = 0.5),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks =  element_blank(),
axis.title = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
mapa_2019_04 <- ggplot(municipios_2019_04 |>
mutate(siglas_comun = factor(siglas_comun, levels = c("PP", "PSOE", "CIU", "UP-IU", "ERC")))) +
geom_sf(aes(fill = siglas_comun), color = "grey20") +
geom_blank(data = partidos_leyenda, aes(fill = siglas_comun)) +
scale_fill_manual(values = c("PP" = "#1f77b4", "PSOE" = "#d62728",
"CIU" = "#1c3687", "UP-IU" = "#7D3C98", "ERC" = "#FFD700")) +
theme_minimal() +
labs(title = "2019-04",
fill = "Partido ganador") +
theme(
plot.title = element_text(hjust = 0.5),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks =  element_blank(),
axis.title = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
mapa_2019_11 <- ggplot(municipios_2019_11 |>
mutate(siglas_comun = factor(siglas_comun, levels = c("PP", "PSOE", "CIU", "UP-IU", "ERC")))) +
geom_sf(aes(fill = siglas_comun), color = "grey20") +
geom_blank(data = partidos_leyenda, aes(fill = siglas_comun)) +
scale_fill_manual(values = c("PP" = "#1f77b4", "PSOE" = "#d62728",
"CIU" = "#1c3687", "UP-IU" = "#7D3C98", "ERC" = "#FFD700")) +
theme_minimal() +
labs(title = "2019-11",
fill = "Partido ganador") +
theme(
plot.title = element_text(hjust = 0.5),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks =  element_blank(),
axis.title = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
#| code-fold: true
#| #| fig.align: 'center'
mapa_2008_03 + mapa_2011_11 + mapa_2015_12 +
mapa_2016_06 + mapa_2019_04 + mapa_2019_11 +
plot_layout(nrow = 2, ncol = 3, guides = "collect") +
plot_annotation(title = "Elecciones generales en España",
theme = theme(plot.title = element_text(face = "bold", hjust = 0.5))) & theme(legend.position = "bottom")
#| code-fold: true
n_votado <- function(partidos, votos, n = 1) {
return(partidos[order(votos, decreasing = TRUE)][n])
}
#| code-fold: true
datos_elecciones_tidy <- datos_elecciones_tidy |>
mutate(ganador = n_votado(siglas_comun, votos, 1),
segundo = n_votado(siglas_comun, votos, 2), .by = c(fecha, id_mun))
#| code-fold: true
#| #| fig.align: 'center'
colores_partidos <- c(
"PSOE" = "#e43d32",
"PP" = "#1D84CE",
"VOX" = "#61bb46",
"UP-IU" = "#772b69",
"CS" = "#EB6109",
"OTROS" = "#A7A9AC",
"ERC" = "#FFD700",
"PNV" = "#009A44",
"MÁS PAÍS" = "#8DB600",
"EH-BILDU" = "#000000",
"BNG" = "#005142",
"CIU" = "#FFCC00",
"COMPROMIS" = "#6AB023"
)
datos_elecciones_tidy <- datos_elecciones_tidy |>
mutate(ganador = factor(ganador, levels = c("PSOE", "PP", "VOX", "UP-IU", "CS", "OTROS", "ERC", "PNV", "MÁS PAÍS", "EH-BILDU", "BNG", "CIU", "COMPROMIS")),
segundo = factor(segundo, levels = c("PSOE", "PP", "VOX", "UP-IU", "CS", "OTROS", "ERC", "PNV", "MÁS PAÍS", "EH-BILDU", "BNG", "CIU", "COMPROMIS")))
conteo <- datos_elecciones_tidy |>
filter(ganador == "PP" | ganador == "PSOE") |>
count(ganador, segundo) |>
rename(pp_psoe = ganador)
datos_elecciones_tidy |>
filter(ganador == "PP" | ganador == "PSOE") |>
drop_na(segundo) |>
mutate(pp_psoe = ifelse(ganador == "PP", "PP", "PSOE")) |>
ggplot() +
geom_bar(aes(x = fecha, fill = segundo), position = "dodge", alpha = 0.8) +
scale_fill_manual(values = colores_partidos) +
labs(title = "Número de veces que un partido queda \nsegundo cuando el PP o el PSOE ganan",
x = "Elecciones",
y = "",
fill = "Partido") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold"),
legend.position = "bottom",
strip.text = element_text(face = "bold")) +
facet_wrap(~pp_psoe, ncol = 1)
#| code-fold: true
datos_elecciones_tidy |>
filter(censo > 2000) |>
group_by(fecha, id_mun) |>
filter(siglas_comun == ganador| siglas_comun == segundo) |>
arrange(desc(votos), .by_group = TRUE) |>
ungroup() |>
mutate(diferencia = votos - lag(votos)) |>
slice_tail(n = 1, by = c(fecha, id_mun)) |>
group_by(fecha) |>
arrange(diferencia, .by_group = TRUE) |>
ungroup() |>
select(fecha, municipio, ganador, segundo, diferencia) |>
mutate(diferencia = abs(diferencia))
#| code-fold: true
datos_elecciones_tidy |>
group_by(fecha, codigo_provincia) |>
filter(siglas_comun == ganador| siglas_comun == segundo) |>
arrange(desc(votos), .by_group = TRUE) |>
ungroup() |>
mutate(diferencia = votos - lag(votos)) |>
slice_tail(n = 1, by = c(fecha, codigo_provincia)) |>
group_by(fecha) |>
arrange(diferencia, .by_group = TRUE) |>
ungroup() |>
select(fecha, codigo_provincia, ganador, segundo, diferencia) |>
mutate(diferencia = abs(diferencia))
#| code-fold: true
datos_elecciones_tidy |>
group_by(fecha, codigo_ccaa) |>
filter(siglas_comun == ganador| siglas_comun == segundo) |>
arrange(desc(votos), .by_group = TRUE) |>
ungroup() |>
mutate(diferencia = votos - lag(votos)) |>
slice_tail(n = 1, by = c(fecha, codigo_ccaa)) |>
group_by(fecha) |>
arrange(diferencia, .by_group = TRUE) |>
ungroup() |>
select(fecha, codigo_ccaa, ganador, segundo, diferencia) |>
mutate(diferencia = abs(diferencia))
#| code-fold: true
datos_elecciones_tidy_nulos <- datos_elecciones_tidy |>
mutate(total_votos_nulos = sum(votos_nulos), .by = c(fecha, id_mun)) |>
distinct(fecha, id_mun, .keep_all = TRUE) |>
mutate(porc_voto_nulos = (total_votos_nulos / (votos_candidaturas + votos_blancos + votos_nulos)) * 100,
.by = c(fecha, id_mun))
#| code-fold: true
datos_elecciones_tidy_nulos |>
group_by(fecha) |>
arrange(desc(porc_voto_nulos), .by_group = TRUE) |>
ungroup() |>
select(fecha, municipio, porc_voto_nulos)
#| code-fold: true
#| fig.align: 'center'
datos_elecciones_tidy |>
slice_max(porc_voto, by = c(fecha, id_mun)) |>
group_by(fecha) |>
arrange(desc(participacion_2), .by_group = TRUE) |>
slice(c(head(row_number(), 10), tail(row_number(), 10))) |>
ungroup() |>
ggplot() +
geom_point(aes(x = fct_reorder(id_mun, participacion_2), y = participacion_2, color = ganador), alpha = 0.8) +
scale_color_manual(values = colores_partidos) +
labs(title = "Los cinco municipios con mayor y menor participación",
x = "Municipio",
y = "Participación",
color = "Ganador") +
theme_minimal() +
theme(plot.title = element_text(face = "bold", hjust = 0.5),
axis.text.x = element_text(angle = 30, hjust = 1)) +
facet_wrap(~fecha, scales = "free_x", ncol = 2)
#| code-fold: true
#| fig.align: 'center'
correlaciones <- datos_elecciones_tidy |>
slice_max(porc_voto, by = c(fecha, id_mun)) |>
group_by(fecha) |>
summarize(correlacion = cor(censo, votos, method = "pearson"))
datos_elecciones_tidy |>
slice_max(porc_voto, by = c(fecha, id_mun)) |>
ggplot() +
geom_point(aes(x = censo, y = votos, color = ganador), alpha = 0.8) +
scale_color_manual(values = colores_partidos) +
labs(title = "Relación entre censo y voto",
x = "Censo",
y = "Votos",
color = "Ganador") +
theme_minimal() +
theme(plot.title = element_text(face = "bold", hjust = 0.5)) +
facet_wrap(~fecha, scales = "free_x", ncol = 2) +
geom_text(data = correlaciones, aes(label = paste("r = ", round(correlacion, 3), sep = "")),
x = -Inf, y = Inf, hjust = -0.2, vjust = 1.1)
#| code-fold: true
#| fig.align: 'center'
datos_elecciones_tidy <- datos_elecciones_tidy |>
mutate(tipo_area = if_else(censo < 1000, "Rural", "Urbana"))
datos_elecciones_tidy |>
slice_max(porc_voto, by = c(fecha, id_mun)) |>
ggplot() +
geom_bar(aes(x = tipo_area, fill = ganador), position = "dodge", alpha = 0.8) +
scale_fill_manual(values = colores_partidos) +
labs(title = "Número de veces que los partidos \nganan en municipios rurales y urbanos",
x = "Tipo de área",
y = "Victorias",
fill = "Ganador") +
theme_minimal() +
theme(plot.title = element_text(face = "bold", hjust = 0.5),
legend.position = "bottom")
